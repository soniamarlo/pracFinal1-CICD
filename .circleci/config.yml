version: 2.1

orbs:
  ggshield: gitguardian/ggshield@volatile
  sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  php-executor:
    docker:
      - image: circleci/php:8.0-cli
    working_directory: ~/repo
    environment:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: ":memory:"

jobs:
  install_dependencies:
    executor: php-executor
    steps:
      - checkout
      - run:
          name: Install Composer Dependencies
          command: |
            composer install --prefer-dist --no-interaction --no-scripts --no-progress
      - persist_to_workspace:
          root: ~/repo
          paths:
            - vendor

  run_tests:
    executor: php-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install and Enable Xdebug
          command: |
            sudo pecl install xdebug && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: Copy .env File
          command: cp .env.example .env
      - run:
          name: Set Up Application Key
          command: php artisan key:generate
      - run:
          name: Run Database Migrations
          command: php artisan migrate --env=testing --database=sqlite
      - sonarcloud/scan
      - run:
          name: Run PHPUnit Tests with Coverage
          command: |
            mkdir -p ~/repo/artifacts/test-results
            php -d xdebug.mode=coverage ./vendor/bin/phpunit --coverage-text --coverage-clover=~/repo/artifacts/test-results/coverage.xml
      - run:
          name: Verify Coverage File
          command: |
            if [ -f ~/repo/artifacts/test-results/coverage.xml ]; then
              echo "Coverage file found."
            else
              echo "Coverage file not found."
              ls -la ~/repo/artifacts/test-results
            fi
      - run:
          name: Pack Application
          command: |
            composer archive --format=zip --dir=artifacts --file=release
      - run:
          name: Verify Artifacts Directory
          command: ls -la ~/repo/artifacts/test-results
      - store_artifacts:
          name: Upload Test Results
          path: ~/repo/artifacts/test-results
          destination: test-results
      - store_artifacts:
          name: Upload Release Package
          path: ~/repo/artifacts/release.zip
          destination: package/release.zip

workflows:
  test-and-scan:
    jobs:
      - install_dependencies
      - run_tests:
          requires:
            - install_dependencies
          context: SonarCloud
      - ggshield/scan:
          name: security_scan
          base_revision: << pipeline.git.base_revision >>
          revision: << pipeline.git.revision >>
          requires:
            - run_tests
